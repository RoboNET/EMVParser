name: Release NuGet Package

on:
  push:
    branches: [ "main" ]
    paths-ignore:
      - '**.md'
      - 'docs/**'
      - 'samples/**'
      - 'LICENSE.md'

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Needed for version calculation
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Configure Git
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"

    # Calculate new version based on conventional commits
    - name: Calculate Version
      id: version
      uses: mathieudutour/github-tag-action@v6.2
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        default_bump: patch
        release_branches: main
        dry_run: true

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 9.0.x

    - name: Create and push tag
      run: |
        echo "Creating version: ${{ steps.version.outputs.new_version }}"
        git tag v${{ steps.version.outputs.new_version }}
        git push origin v${{ steps.version.outputs.new_version }}

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --configuration Release --no-restore -p:Version=${{ steps.version.outputs.new_version }}

    - name: Test
      run: dotnet test --configuration Release --no-build --verbosity normal

    - name: Pack NuGet package
      run: dotnet pack src/RoboNet.EMVParser/RoboNet.EMVParser.csproj --configuration Release --no-build -p:Version=${{ steps.version.outputs.new_version }} --output ./nupkg

    - name: Publish to NuGet
      run: |
        dotnet nuget push ./nupkg/*.nupkg --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json --skip-duplicate
        dotnet nuget push ./nupkg/*.snupkg --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json --skip-duplicate
      continue-on-error: false

    - name: Generate changelog
      id: changelog
      uses: mikepenz/release-changelog-builder-action@v4
      with:
        configurationJson: |
          {
            "categories": [
              {
                "title": "## üöÄ Features",
                "rules": [
                  {"pattern": "^feat(\\(.+\\))?!?:", "on_property": "subject"}
                ]
              },
              {
                "title": "## üêõ Bug Fixes",
                "rules": [
                  {"pattern": "^fix(\\(.+\\))?!?:", "on_property": "subject"}
                ]
              },
              {
                "title": "## üß™ Tests",
                "rules": [
                  {"pattern": "^test(\\(.+\\))?!?:", "on_property": "subject"}
                ]
              },
              {
                "title": "## üìù Documentation",
                "rules": [
                  {"pattern": "^docs(\\(.+\\))?!?:", "on_property": "subject"}
                ]
              },
              {
                "title": "## üîß Chores",
                "rules": [
                  {"pattern": "^chore(\\(.+\\))?!?:", "on_property": "subject"}
                ]
              },
              {
                "title": "## ‚ôªÔ∏è Refactoring",
                "rules": [
                  {"pattern": "^refactor(\\(.+\\))?!?:", "on_property": "subject"}
                ]
              },
              {
                "title": "## üî® Other Changes",
                "rules": [
                  {"pattern": ".*", "on_property": "subject"}
                ]
              }
            ],
            "ignore_labels": ["ignore"],
            "sort": "ASC",
            "template": "${{CHANGELOG}}",
            "pr_template": "- ${{TITLE}} (#${{NUMBER}})",
            "commit_template": "- ${{TITLE}}",
            "empty_template": "- No changes",
            "trim_values": true
          }
        toTag: v${{ steps.version.outputs.new_version }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Create GitHub Release
      uses: ncipollo/release-action@v1
      with:
        tag: v${{ steps.version.outputs.new_version }}
        name: Release v${{ steps.version.outputs.new_version }}
        body: |
          ## RoboNet.EMVParser v${{ steps.version.outputs.new_version }}

          ${{ steps.changelog.outputs.changelog }}

          ### üì¶ NuGet Package
          ```bash
          dotnet add package RoboNet.EMVParser --version ${{ steps.version.outputs.new_version }}
          ```

          Or visit [NuGet Gallery](https://www.nuget.org/packages/RoboNet.EMVParser/${{ steps.version.outputs.new_version }})
        artifacts: "./nupkg/*.nupkg,./nupkg/*.snupkg"
        draft: false
        prerelease: false
        token: ${{ secrets.GITHUB_TOKEN }}